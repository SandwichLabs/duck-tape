# https://taskfile.dev

version: '3'

tasks:
  default:
    cmds:
      - task --list
  build:
    vars:
      USE_DIR: '{{.DIR | default "$PWD" }}'
    desc: Build the ducktape binary
    cmds:
      - go build -v -o=dist/dt .
    generates:
      - dist/dt
    sources:
      - ./**/*.go

  goreleaser:install:
    desc: Installs goreleaser
    cmds:
      - go install github.com/goreleaser/goreleaser@latest
  build:release:
    desc: Build the DuckTape binaries using goreleaser
    cmds:
      - goreleaser release --skip=publish --clean
  release:*:
    desc: Release the DuckTape binary
    summary: |
      This task will build the DuckTape binary and release it to GitHub:
      - Build the DuckTape binary
      - Push the tag to GitHub
      - Create a new release on GitHub
      - Upload the ./dist/ artifacts to the release
    vars:
      VERSION: "{{index .MATCH 0}}"
    preconditions:
      - sh: test $(git rev-parse --abbrev-ref HEAD) = "main"
        msg: "You must be on the main branch to release"
      - sh: "[[ -z $(git diff --shortstat main) ]]"
        msg: "You must have a clean working tree to release"
    prompt: "Are you sure you want to release version {{.VERSION}}?"
    cmds:
      - cmd: echo "Releasing v{{.VERSION}}"
        silent: true
      - task: build:release
      - "git tag v{{.VERSION}}"
      - "git push origin tag v{{.VERSION}}"
      - gh release create v{{.VERSION}} -F dist/CHANGELOG.md
      - gh release upload v{{.VERSION}} ./dist/*
      - cmd: printf "%s" '{{.COMPLETE_MESSAGE}}'
        silent: true
